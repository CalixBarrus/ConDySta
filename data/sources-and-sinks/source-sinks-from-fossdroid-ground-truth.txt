<android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<android.content.Intent: android.net.Uri getData()> -> _SOURCE_
<java.io.File: java.lang.String getAbsolutePath()> -> _SOURCE_
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)> -> _SOURCE_
<android.view.View: android.graphics.Bitmap getDrawingCache()> -> _SOURCE_
<android.view.MotionEvent: int getActionIndex()> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.database.Cursor: java.lang.String getString(int)> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getText()> -> _SOURCE_
<java.util.Calendar: int get(int)> -> _SOURCE_
<android.media.AudioManager: int getStreamMaxVolume(int)> -> _SOURCE_
<android.content.Intent: android.os.Bundle getExtras()> -> _SOURCE_
<java.util.Calendar: long getTimeInMillis()> -> _SOURCE_
<android.widget.EditText: android.text.Editable getText()> -> _SOURCE_
<android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)> -> _SOURCE_
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)> -> _SOURCE_
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.media.AudioManager: int getStreamVolume(int)> -> _SOURCE_
<java.util.Date: int getSeconds()> -> _SOURCE_
<java.util.Date: int getMinutes()> -> _SOURCE_
<java.util.Date: int getHours()> -> _SOURCE_
<java.text.DateFormat: java.lang.String format(java.util.Date)> -> _SOURCE_
<com.notriddle.budget.PinActivity: android.view.View findViewById(int)> -> _SOURCE_
<java.io.InputStream: int read(byte[])> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.content.ClipData$Item: java.lang.CharSequence getText()> -> _SOURCE_
<java.security.SecureRandom: void nextBytes(byte[])> -> _SOURCE_
<android.view.KeyCharacterMap: int getModifierBehavior()> -> _SOURCE_
<android.net.Uri: java.lang.String getScheme()> -> _SOURCE_
<android.view.KeyEvent: int getUnicodeChar(int)> -> _SOURCE_
<android.graphics.Paint: float getFontSpacing()> -> _SOURCE_
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)> -> _SOURCE_
<android.view.KeyEvent: int getDeviceId()> -> _SOURCE_
<java.io.File: java.lang.String getPath()> -> _SOURCE_
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> -> _SOURCE_
<android.os.Process: int myPid_ds_method_clone_5()> -> _SOURCE_
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> -> _SOURCE_
<java.lang.System: long nanoTime()> -> _SOURCE_
<android.net.Uri: java.lang.String getPath()> -> _SOURCE_
<java.io.File: java.io.File getParentFile()> -> _SOURCE_
<java.io.File: java.lang.String getCanonicalPath()> -> _SOURCE_
<android.net.Uri: java.lang.String getFragment()> -> _SOURCE_
<android.os.Process: int myUid()> -> _SOURCE_
<android.location.Location: double getLatitude()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<java.lang.Runtime: java.lang.Process exec(java.lang.String)> -> _SOURCE_
<java.io.File: java.lang.String getName()> -> _SOURCE_
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)> -> _SOURCE_
<nya.miku.wishmaster.ui.posting.PostFormActivity: android.view.View findViewById(int)> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)> -> _SOURCE_
<java.lang.Class: java.lang.Class[] getDeclaredClasses()> -> _SOURCE_
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<android.net.Uri: java.lang.String getSchemeSpecificPart()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> -> _SOURCE_
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)> -> _SOURCE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)> -> _SOURCE_
<android.os.Environment: java.io.File getDataDirectory()> -> _SOURCE_
<android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()> -> _SOURCE_
<java.lang.ProcessBuilder: java.lang.Process start()> -> _SOURCE_
<java.io.BufferedReader: java.lang.String readLine()> -> _SOURCE_
<java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)> -> _SOURCE_
<java.io.InputStream: int read(byte[],int,int)> -> _SOURCE_
<android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()> -> _SOURCE_
<android.os.Parcel: byte[] marshall()> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int)> -> _SOURCE_
<android.view.InputDevice: int getSources()> -> _SOURCE_
<android.view.InputDevice: int getId()> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)> -> _SOURCE_
<android.view.MotionEvent: int getDeviceId()> -> _SOURCE_
<android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()> -> _SOURCE_
<android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()> -> _SOURCE_
<android.media.AudioRecord: int read(byte[],int,int)> -> _SOURCE_
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: int getPort()> -> _SOURCE_
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault_ds_method_clone_4()> -> _SOURCE_
<java.util.Locale: java.lang.String toString()> -> _SOURCE_
<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()> -> _SOURCE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> _SINK_
<android.app.Activity: void startActivityForResult(android.content.Intent,int)> -> _SINK_
<android.app.Activity: void setRequestedOrientation(int)> -> _SINK_
<android.app.Activity: void startActivity(android.content.Intent)> -> _SINK_
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _SINK_
<android.os.Bundle: void putInt(java.lang.String,int)> -> _SINK_
<android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)> -> _SINK_
<android.content.Context: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SINK_
<android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)> -> _SINK_
<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)> -> _SINK_
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)> -> _SINK_
<android.content.ContextWrapper: void startActivity(android.content.Intent)> -> _SINK_
<android.os.Handler: boolean sendMessage(android.os.Message)> -> _SINK_
<android.os.Handler: boolean sendEmptyMessage(int)> -> _SINK_
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> -> _SINK_
<android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)> -> _SINK_
<android.media.AudioManager: void setStreamVolume(int,int,int)> -> _SINK_
<android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)> -> _SINK_
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)> -> _SINK_
<android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)> -> _SINK_
<android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)> -> _SINK_
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)> -> _SINK_
<android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)> -> _SINK_
<android.util.Log: int d(java.lang.String,java.lang.String)> -> _SINK_
<com.notriddle.budget.PinActivity: void setResult(int,android.content.Intent)> -> _SINK_
<android.content.Intent: android.content.Intent setAction(java.lang.String)> -> _SINK_
<java.io.FileOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.BufferedWriter: void write(java.lang.String)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)> -> _SINK_
<android.app.Activity: void setResult(int,android.content.Intent)> -> _SINK_
<java.lang.StringBuilder: java.lang.String substring(int,int)> -> _SINK_
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _SINK_
<java.io.DataOutputStream: void writeLong(long)> -> _SINK_
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> -> _SINK_
<android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)> -> _SINK_
<android.content.ClipboardManager: void setText(java.lang.CharSequence)> -> _SINK_
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)> -> _SINK_
<android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)> -> _SINK_
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)> -> _SINK_
<net.osmand.plus.OsmandApplication: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)> -> _SINK_
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)> -> _SINK_
<java.lang.Runtime: java.lang.Process exec(java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)> -> _SINK_
<java.io.OutputStream: void write(byte[])> -> _SINK_
<android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)> -> _SINK_
<java.io.OutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.Writer: void write(java.lang.String)> -> _SINK_
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<java.io.Writer: void write(int)> -> _SINK_
<android.os.Bundle: void putLong(java.lang.String,long)> -> _SINK_
<android.content.IntentFilter: void addAction(java.lang.String)> -> _SINK_
<nya.miku.wishmaster.ui.MainActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SINK_
<nya.miku.wishmaster.ui.downloading.DownloadingProgressActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SINK_
<nya.miku.wishmaster.ui.downloading.DownloadingService: void sendBroadcast(android.content.Intent)> -> _SINK_
<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE html> -> _SINK_
<nya.miku.wishmaster.ui.gallery.GalleryActivity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> -> _SINK_
<android.os.Bundle: void putString(java.lang.String,java.lang.String)> -> _SINK_
<nya.miku.wishmaster.ui.gallery.GalleryActivity: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<nya.miku.wishmaster.ui.posting.PostFormActivity: void startActivityForResult(android.content.Intent,int)> -> _SINK_
<nya.miku.wishmaster.ui.posting.PostFormActivity: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<nya.miku.wishmaster.ui.posting.PostingService: void sendBroadcast(android.content.Intent)> -> _SINK_
<nya.miku.wishmaster.ui.MainActivity: void sendBroadcast(android.content.Intent)> -> _SINK_
<nya.miku.wishmaster.ui.tabs.TabsTrackerService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SINK_
<nya.miku.wishmaster.ui.tabs.TabsTrackerService: void sendBroadcast(android.content.Intent)> -> _SINK_
<org.dnaq.dialer2.ContactViewDialog: void setResult(int,android.content.Intent)> -> _SINK_
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)> -> _SINK_
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)> -> _SINK_
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<org.dnaq.dialer2.DialerActivity: void startActivityForResult(android.content.Intent,int)> -> _SINK_
<android.content.ContentValues: void putNull(java.lang.String)> -> _SINK_
<android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<java.lang.ProcessBuilder: java.lang.Process start()> -> _SINK_
<android.webkit.WebView: void loadUrl(java.lang.String)> -> _SINK_
<android.os.Bundle: void putIntArray(java.lang.String,int[])> -> _SINK_
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)> -> _SINK_
<android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)> -> _SINK_
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)> -> _SINK_
<android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)> -> _SINK_
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)> -> _SINK_
<android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)> -> _SINK_
<android.content.Context: void sendBroadcast(android.content.Intent)> -> _SINK_
<protect.budgetwatch.TransactionActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SINK_
<android.os.Bundle: void putBoolean(java.lang.String,boolean)> -> _SINK_
<protect.budgetwatch.TransactionViewActivity: void startActivityForResult(android.content.Intent,int)> -> _SINK_
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)> -> _SINK_
<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)> -> _SINK_
<ru.henridellal.dialer.PickContactNumberActivity: void setResult(int,android.content.Intent)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)> -> _SINK_
<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)> -> _SINK_
